<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="LineShape1.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>3, 133, 124, 0</value>
  </metadata>
  <metadata name="LineShape1.Location" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>3, 133</value>
  </metadata>
  <metadata name="LineShape1.Size" type="System.Drawing.Size, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 0</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>51</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        i1BsOxWMYDp+q5Z+R5PNcjY1UD//2Q==
</value>
  </data>
</root>